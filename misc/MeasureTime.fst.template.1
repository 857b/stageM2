return ()
)
        #(_ by T.(
          print ("begin test n :REPEAT");
          print ("begin at : "^string_of_int (curms ()));
          mk_steel [Timer; Extract]))
         ())
#pop-options

noextract
let _ : unit = _ by T.(
          print ("end at : "^string_of_int (curms ()));
          exact (`()))

let test_extract (r : ref U32.t)
  : Steel unit (vptr r) (fun () -> vptr r)
      (requires fun h0       -> U32.v (sel r h0) <= 100)
      (ensures  fun h0 () h1 -> U32.v (sel r h1) = U32.v (sel r h0) + REPEAT)
  = test_time r ()
