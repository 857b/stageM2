/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>
 */

#ifndef __list_H
#define __list_H




#include <stdint.h>
#include "krml/internal/target.h"
typedef struct Learn_LowStar_List_Data_cell__uint32_t_s Learn_LowStar_List_Data_cell__uint32_t;

typedef struct Learn_LowStar_List_Data_cell__uint32_t_s
{
  Learn_LowStar_List_Data_cell__uint32_t *next;
  uint32_t data;
}
Learn_LowStar_List_Data_cell__uint32_t;

uint32_t
Learn_LowStar_List_Impl_length_loop__uint32_t(Learn_LowStar_List_Data_cell__uint32_t *p);

extern uint32_t
(*Learn_LowStar_List_Impl_length_loop_u32)(Learn_LowStar_List_Data_cell__uint32_t *x0);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_initi__uint32_t(uint32_t lb, uint32_t ub, uint32_t (*f)(uint32_t x0));

extern Learn_LowStar_List_Data_cell__uint32_t
*(*Learn_LowStar_List_Impl_initi_u32)(uint32_t x0, uint32_t x1, uint32_t (*x2)(uint32_t x0));

uint32_t Learn_LowStar_List_Impl_initi_id_f(uint32_t i);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_initi_id(uint32_t lb, uint32_t ub);

uint32_t
Learn_LowStar_List_Impl_index__uint32_t(Learn_LowStar_List_Data_cell__uint32_t *p, uint32_t i);

extern uint32_t
(*Learn_LowStar_List_Impl_index_u32)(Learn_LowStar_List_Data_cell__uint32_t *x0, uint32_t x1);

uint32_t
Learn_LowStar_List_Impl_index_loop__uint32_t(
  Learn_LowStar_List_Data_cell__uint32_t *p,
  uint32_t i
);

extern uint32_t
(*Learn_LowStar_List_Impl_index_loop_u32)(
  Learn_LowStar_List_Data_cell__uint32_t *x0,
  uint32_t x1
);

void
Learn_LowStar_List_Impl_insert_aux__uint32_t(
  uint32_t i,
  uint32_t x,
  Learn_LowStar_List_Data_cell__uint32_t *p
);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_insert__uint32_t(
  uint32_t i,
  uint32_t x,
  Learn_LowStar_List_Data_cell__uint32_t *p
);

extern Learn_LowStar_List_Data_cell__uint32_t
*(*Learn_LowStar_List_Impl_insert_u32)(
  uint32_t x0,
  uint32_t x1,
  Learn_LowStar_List_Data_cell__uint32_t *x2
);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_insert_loop__uint32_t(
  uint32_t i,
  uint32_t x,
  Learn_LowStar_List_Data_cell__uint32_t *p
);

extern Learn_LowStar_List_Data_cell__uint32_t
*(*Learn_LowStar_List_Impl_insert_loop_u32)(
  uint32_t x0,
  uint32_t x1,
  Learn_LowStar_List_Data_cell__uint32_t *x2
);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_forward_u32(uint32_t i, Learn_LowStar_List_Data_cell__uint32_t *p);

void
Learn_LowStar_List_Impl_set__uint32_t(
  uint32_t i,
  uint32_t x,
  Learn_LowStar_List_Data_cell__uint32_t *p
);

extern void
(*Learn_LowStar_List_Impl_set_u32)(
  uint32_t x0,
  uint32_t x1,
  Learn_LowStar_List_Data_cell__uint32_t *x2
);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_last__uint32_t(Learn_LowStar_List_Data_cell__uint32_t *p);

extern Learn_LowStar_List_Data_cell__uint32_t
*(*Learn_LowStar_List_Impl_last_u32)(Learn_LowStar_List_Data_cell__uint32_t *x0);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_append__uint32_t(
  Learn_LowStar_List_Data_cell__uint32_t *p0,
  Learn_LowStar_List_Data_cell__uint32_t *p1
);

extern Learn_LowStar_List_Data_cell__uint32_t
*(*Learn_LowStar_List_Impl_append_u32)(
  Learn_LowStar_List_Data_cell__uint32_t *x0,
  Learn_LowStar_List_Data_cell__uint32_t *x1
);

Learn_LowStar_List_Data_cell__uint32_t
*Learn_LowStar_List_Impl_reverse__uint32_t(Learn_LowStar_List_Data_cell__uint32_t *p);

extern Learn_LowStar_List_Data_cell__uint32_t
*(*Learn_LowStar_List_Impl_reverse_u32)(Learn_LowStar_List_Data_cell__uint32_t *x0);

void Learn_LowStar_List_Impl_free__uint32_t(Learn_LowStar_List_Data_cell__uint32_t *p);

extern void (*Learn_LowStar_List_Impl_free_u32)(Learn_LowStar_List_Data_cell__uint32_t *x0);

void Learn_LowStar_List_Impl_test_for();

void Learn_LowStar_List_Impl_test_ghost();

void Learn_LowStar_List_Impl_test();


#define __list_H_DEFINED
#endif
